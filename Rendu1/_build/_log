### Starting build.
# Target: main.ml.depends, tags: { extension:ml, file:main.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules main.ml > main.ml.depends # cached
# Target: cnf.ml.depends, tags: { extension:ml, file:cnf.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules cnf.ml > cnf.ml.depends # cached
# Target: sort.ml.depends, tags: { extension:ml, file:sort.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules sort.ml > sort.ml.depends # cached
# Target: sort.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:sort.cmo, file:sort.ml, implem, ocaml, quiet }
/usr/bin/ocamlc -c -o sort.cmo sort.ml # cached
# Target: cnf.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:cnf.cmo, file:cnf.ml, implem, ocaml, quiet }
/usr/bin/ocamlc -c -o cnf.cmo cnf.ml # cached
# Target: dpll.ml.depends, tags: { extension:ml, file:dpll.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules dpll.ml > dpll.ml.depends # cached
# Target: pile.ml.depends, tags: { extension:ml, file:pile.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules pile.ml > pile.ml.depends # cached
# Target: pile.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:pile.cmo, file:pile.ml, implem, ocaml, quiet }
/usr/bin/ocamlc -c -o pile.cmo pile.ml # cached
# Target: dpll.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:dpll.cmo, file:dpll.ml, implem, ocaml, quiet }
/usr/bin/ocamlc -c -o dpll.cmo dpll.ml # cached
# Target: lexer.mll, tags: { extension:mll, file:lexer.mll, lexer, ocaml, ocamllex, quiet }
/usr/bin/ocamllex -q lexer.mll # cached
# Target: lexer.ml.depends, tags: { extension:ml, file:lexer.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules lexer.ml > lexer.ml.depends # cached
# Target: parser.mly, tags: { extension:mly, file:parser.mly, ocaml, ocamlyacc, parser, quiet }
/usr/bin/ocamlyacc -v parser.mly # cached
# Target: parser.mli.depends, tags: { extension:mli, file:parser.mli, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules parser.mli > parser.mli.depends # cached
# Target: parser.cmi, tags: { byte, compile, extension:mli, file:parser.mli, interf, ocaml, quiet }
/usr/bin/ocamlc -c -o parser.cmi parser.mli # cached
# Target: lexer.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:lexer.cmo, file:lexer.ml, implem, ocaml, quiet }
/usr/bin/ocamlc -c -o lexer.cmo lexer.ml # cached
# Target: main.cmo, tags: { byte, compile, extension:cmo, extension:ml, file:main.cmo, file:main.ml, implem, ocaml, quiet }
/usr/bin/ocamlc -c -o main.cmo main.ml # cached
# Target: sort.cmx, tags: { compile, extension:cmx, extension:ml, file:sort.cmx, file:sort.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt -c -o sort.cmx sort.ml # cached
# Target: cnf.cmx, tags: { compile, extension:cmx, extension:ml, file:cnf.cmx, file:cnf.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt -c -o cnf.cmx cnf.ml # cached
# Target: pile.cmx, tags: { compile, extension:cmx, extension:ml, file:pile.cmx, file:pile.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt -c -o pile.cmx pile.ml # cached
# Target: dpll.cmx, tags: { compile, extension:cmx, extension:ml, file:dpll.cmx, file:dpll.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt -c -o dpll.cmx dpll.ml # cached
# Target: parser.ml.depends, tags: { extension:ml, file:parser.ml, ocaml, ocamldep, quiet }
/usr/bin/ocamldep -modules parser.ml > parser.ml.depends # cached
# Target: parser.cmx, tags: { compile, extension:cmx, extension:ml, file:parser.cmx, file:parser.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt -c -o parser.cmx parser.ml # cached
# Target: lexer.cmx, tags: { compile, extension:cmx, extension:ml, file:lexer.cmx, file:lexer.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt -c -o lexer.cmx lexer.ml # cached
# Target: main.cmx, tags: { compile, extension:cmx, extension:ml, file:main.cmx, file:main.ml, implem, native, ocaml, quiet }
/usr/bin/ocamlopt -c -o main.cmx main.ml # cached
# Target: main.native, tags: { dont_link_with, extension:native, file:main.native, link, native, ocaml, program, quiet }
/usr/bin/ocamlopt unix.cmxa sort.cmx cnf.cmx pile.cmx dpll.cmx parser.cmx lexer.cmx main.cmx -o main.native # cached
# Compilation successful.
